
#Configure Hibernate in Spring to automatically generate a MySQL schema:
#***********************************************************************
#Properties:
#create - create new schema, drop existing
#create-drop - create schema and drop when SessionFactory is closed (app stops)
#update - update the schema if there are any changes in the entity mappings, existing data persists
#validate - throws exception if tables or columns don't exist
spring.jpa.hibernate.ddl-auto=update

# Environment variables:
#***********************
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_USERNAME}
#spring.datasource.password=${JDBC_PASSWORD}
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#H2 database used for development:
#*********************************
spring.datasource.url=jdbc:h2:mem:shopping-buddy-db
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#H2 management console (localhost:8080/h2-console):
#*************************************************
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Environment variables for localhost in IntelliJ:
#************************************************
#JDBC_DATABASE_URL=jdbc:mysql://localhost:3306/database-name;JDBC_USERNAME=xxx;JDBC_PASSWORD=yyy

#better error messages:
#**********************
spring.jpa.show-sql=true

#Configurations for using Google Identity Platform:
#**************************************************
#spring.security.oauth2.client.registration.google.client-id=your-client-id
#spring.security.oauth2.client.registration.google.client-secret=your-client-secret
#spring.security.oauth2.client.registration.google.scope=email,profile
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

#Hikari settings:
#****************
#spring.datasource.hikari.maxLifetime property must be lower than than the database's wait_timeout
#1 minutes wait time:
spring.datasource.hikari.maxLifeTime : 60000
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
#spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=20
#spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=4
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=30000